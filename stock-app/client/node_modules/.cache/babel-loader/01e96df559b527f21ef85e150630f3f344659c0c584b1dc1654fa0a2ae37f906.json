{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marina\\\\Desktop\\\\Mon_Projet\\\\stock-app\\\\client\\\\src\\\\components\\\\StockEvolutionGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst StockEvolutionGraph = ({\n  itemId\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    const fetchStockHistory = async () => {\n      try {\n        const config = {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        };\n        const res = await axios.get(`/api/items/${itemId}/history`, config);\n        const history = res.data;\n\n        // Sort history by date to ensure correct graph display\n        history.sort((a, b) => new Date(a.date) - new Date(b.date));\n        setChartData({\n          labels: history.map(data => new Date(data.date).toLocaleDateString()),\n          datasets: [{\n            label: 'Stock Quantity',\n            data: history.map(data => data.quantity),\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    if (itemId) {\n      fetchStockHistory();\n    }\n  }, [itemId]);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Stock Evolution Over Time'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '600px',\n      height: '300px'\n    },\n    children: chartData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stock history available for this item.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(StockEvolutionGraph, \"ACtgFDDiZUUiVLrWikd26C2GBwE=\");\n_c = StockEvolutionGraph;\nexport default StockEvolutionGraph;\nvar _c;\n$RefreshReg$(_c, \"StockEvolutionGraph\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","StockEvolutionGraph","itemId","_s","chartData","setChartData","labels","datasets","fetchStockHistory","config","headers","localStorage","getItem","res","get","history","data","sort","a","b","Date","date","map","toLocaleDateString","label","quantity","borderColor","tension","err","console","error","response","options","responsive","plugins","legend","position","title","display","text","style","width","height","children","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Marina/Desktop/Mon_Projet/stock-app/client/src/components/StockEvolutionGraph.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst StockEvolutionGraph = ({ itemId }) => {\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [],\n  });\n\n  useEffect(() => {\n    const fetchStockHistory = async () => {\n      try {\n        const config = {\n          headers: {\n            'x-auth-token': localStorage.getItem('token'),\n          },\n        };\n        const res = await axios.get(`/api/items/${itemId}/history`, config);\n        const history = res.data;\n\n        // Sort history by date to ensure correct graph display\n        history.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n        setChartData({\n          labels: history.map((data) => new Date(data.date).toLocaleDateString()),\n          datasets: [\n            {\n              label: 'Stock Quantity',\n              data: history.map((data) => data.quantity),\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.1,\n            },\n          ],\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n\n    if (itemId) {\n      fetchStockHistory();\n    }\n  }, [itemId]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Stock Evolution Over Time',\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '600px', height: '300px' }}>\n      {chartData.labels.length > 0 ? (\n        <Line data={chartData} options={options} />\n      ) : (\n        <p>No stock history available for this item.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StockEvolutionGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}